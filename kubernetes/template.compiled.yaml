apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    stack: gentry
    component: postgres
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    stack: gentry
    component: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      stack: gentry
      component: postgres
  template:
    metadata:
      labels:
        stack: gentry
        component: postgres
    spec:
      enableServiceLinks: false
      containers:
      - name: postgres
        image: postgres
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: gentry
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres
              key: password
        volumeMounts:
        - mountPath: /var/lib/postgresql
          name: postgres-data
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - djangoapp
          initialDelaySeconds: 15
          periodSeconds: 30
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - djangoapp
          initialDelaySeconds: 30
          periodSeconds: 30
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    stack: gentry
    component: postgres
  name: postgres-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1000Mi
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres
  labels:
    stack: gentry
    component: postgres
type: Opaque
data:
  username: Z2VudHJ5
  hostname: cG9zdGdyZXM=
  database: Z2VudHJ5
  password: ZGphbmdvYXBw
---
apiVersion: v1
kind: Service
metadata:
  name: uwsgi
  labels:
    stack: gentry
    component: djangoapp
spec:
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    stack: gentry
    component: uwsgi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uwsgi
spec:
  selector:
    matchLabels:
      stack: gentry
      component: uwsgi
  template:
    metadata:
      labels:
        stack: gentry
        component: uwsgi
    spec:
      enableServiceLinks: false
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
      - name: setup
        image: gentry
        args:
        - python
        - manage.py
        - migrate
        env:
        - name: POSTGRES_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: postgres
              key: hostname
        - name: POSTGRES_DATABASE
          valueFrom:
            secretKeyRef:
              name: postgres
              key: database
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres
              key: password
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: gentry
              key: secretKey
        - name: KOMPASSI_OAUTH2_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: gentry
              key: kompassiClientId
        - name: KOMPASSI_OAUTH2_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: gentry
              key: kompassiClientSecret
        - name: ALLOWED_HOSTS
          value: gentry.localhost
        - name: EMAIL_HOST
          value: ''
        - name: DEFAULT_FROM_EMAIL
          value: ''
        - name: ADMINS
          value: ''
        - name: GOTIFY_IMMEDIATE
          value: 'true'
        - name: GOTIFY_IMMEDIATE_THREADS
          value: 'true'
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      containers:
      - name: uwsgi
        image: gentry
        ports:
        - containerPort: 8000
        env:
        - name: POSTGRES_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: postgres
              key: hostname
        - name: POSTGRES_DATABASE
          valueFrom:
            secretKeyRef:
              name: postgres
              key: database
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres
              key: password
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: gentry
              key: secretKey
        - name: KOMPASSI_OAUTH2_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: gentry
              key: kompassiClientId
        - name: KOMPASSI_OAUTH2_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: gentry
              key: kompassiClientSecret
        - name: ALLOWED_HOSTS
          value: gentry.localhost
        - name: EMAIL_HOST
          value: ''
        - name: DEFAULT_FROM_EMAIL
          value: ''
        - name: ADMINS
          value: ''
        - name: GOTIFY_IMMEDIATE
          value: 'true'
        - name: GOTIFY_IMMEDIATE_THREADS
          value: 'true'
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        startupProbe:
          httpGet:
            path: /healthz
            port: 8000
            httpHeaders:
            - name: Host
              value: gentry.localhost
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
            httpHeaders:
            - name: Host
              value: gentry.localhost
          periodSeconds: 30
        volumeMounts:
        - mountPath: /tmp
          name: temp
      volumes:
      - name: temp
        emptyDir: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: gentry
  labels:
    stack: gentry
type: Opaque
data:
  kompassiClientId: ''
  kompassiClientSecret: ''
  secretKey: bm90IGEgdmVyeSBzZWNyZXQga2V5
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gentry
spec:
  rules:
  - host: gentry.localhost
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: uwsgi
            port:
              number: 8000
